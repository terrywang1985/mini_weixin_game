
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

import 'dart:ffi';
import 'dart:collection';
import '/gen/Tables.dart';

import '/gen/ai/EFlowAbortMode.dart';

import '/gen/ai/Decorator.dart';

 class IsAtLocation extends Decorator
{
    IsAtLocation(
    {
    required super.id, 
    required super.node_name, 
    required super.flow_abort_mode, 
    required this.acceptable_radius,
    required this.keyboard_key,
    required this.inverse_condition,
    }
    );

    factory IsAtLocation.deserialize(dynamic _buf){
        final id;
        id = _buf['id'] as int;
        final node_name;
        node_name = _buf['node_name'] as String;
        final flow_abort_mode;
        flow_abort_mode = EFlowAbortMode.fromValue(_buf['flow_abort_mode']);
        final acceptable_radius;
        acceptable_radius = _buf['acceptable_radius'].toDouble();
        final keyboard_key;
        keyboard_key = _buf['keyboard_key'] as String;
        final inverse_condition;
        inverse_condition = _buf['inverse_condition'] as bool;
        return IsAtLocation(
            id:id,
            node_name:node_name,
            flow_abort_mode:flow_abort_mode,
            acceptable_radius:acceptable_radius,
            keyboard_key:keyboard_key,
            inverse_condition:inverse_condition,
       );
    }

    final double acceptable_radius;
    final String keyboard_key;
    final bool inverse_condition;
    static final int __ID__ = 1255972344;
     @override
    void resolveRef(Tables tables)
    {
        super.resolveRef(tables);

    }

    @override
    String toString() {
        return 'IsAtLocation(id:$id, node_name:$node_name, flow_abort_mode:$flow_abort_mode, acceptable_radius:$acceptable_radius, keyboard_key:$keyboard_key, inverse_condition:$inverse_condition, )';
    }
}

