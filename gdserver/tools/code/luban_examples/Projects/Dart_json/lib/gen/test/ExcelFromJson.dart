
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

import 'dart:ffi';
import 'dart:collection';
import '/gen/Tables.dart';

import '/gen/test/DemoType1.dart';
import '/gen/test/DemoEnum.dart';
import '/gen/test/DemoDynamic.dart';
import '/gen/test/DemoE2.dart';
import '/gen/test/DemoDynamic.dart';


 class ExcelFromJson 
{
    ExcelFromJson(
    {
    required this.x4,
    required this.x1,
    required this.x5,
    required this.x6,
    required this.s1,
    required this.s2,
    required this.t1,
    required this.x12,
    required this.x13,
    required this.x14,
    required this.k1,
    required this.k8,
    required this.k9,
    required this.k15,
    }
    );

    factory ExcelFromJson.deserialize(dynamic _buf){
        final x4;
        x4 = _buf['x4'] as int;
        final x1;
        x1 = _buf['x1'] as bool;
        final x5;
        x5 = _buf['x5'] as int;
        final x6;
        x6 = _buf['x6'].toDouble();
        final s1;
        s1 = _buf['s1'] as String;
        final s2;
        s2 = _buf['s2'] as String;
        final t1;
        t1 = _buf['t1'] as int;
        final x12;
        x12 = DemoType1.deserialize(_buf['x12']);
        final x13;
        x13 = DemoEnum.fromValue(_buf['x13']);
        final x14;
        x14 = DemoDynamic.deserialize(_buf['x14']);
        final k1;
        {var _json0 = _buf['k1'] as List<dynamic>; k1 = List<int>.empty(growable: true); for(var _e0 in _json0) {int _v0; _v0 = _e0 as int; k1.add(_v0); } };
        final k8;
        { var __json0 = _buf['k8']; k8 = Map<int, int>(); for(var __e0 in __json0) { var _k0 = __e0[0] as int; int _v0;  _v0 = __e0[1] as int;  k8[_k0]= _v0; }   };
        final k9;
        {var _json0 = _buf['k9'] as List<dynamic>; k9 = List<DemoE2>.empty(growable: true); for(var _e0 in _json0) {DemoE2 _v0; _v0 = DemoE2.deserialize(_e0); k9.add(_v0); } };
        final k15;
        {var _json0 = _buf['k15'] as List<dynamic>; k15 = List<DemoDynamic>.empty(growable: true); for(var _e0 in _json0) {DemoDynamic _v0; _v0 = DemoDynamic.deserialize(_e0); k15.add(_v0); } };
        return ExcelFromJson(
            x4:x4,
            x1:x1,
            x5:x5,
            x6:x6,
            s1:s1,
            s2:s2,
            t1:t1,
            x12:x12,
            x13:x13,
            x14:x14,
            k1:k1,
            k8:k8,
            k9:k9,
            k15:k15,
       );
    }

    final int x4;
    final bool x1;
    final int x5;
    final double x6;
    final String s1;
    final String s2;
    final int t1;
    final DemoType1 x12;
    final DemoEnum x13;
    final DemoDynamic x14;
    final List<int> k1;
    final Map<int, int> k8;
    final List<DemoE2> k9;
    final List<DemoDynamic> k15;
    static final int __ID__ = -1485706483;
     
    void resolveRef(Tables tables)
    {

        x12?.resolveRef(tables);
        x14?.resolveRef(tables);
        for (var _e in k15) { _e?.resolveRef(tables); }
    }

    @override
    String toString() {
        return 'ExcelFromJson(x4:$x4, x1:$x1, x5:$x5, x6:$x6, s1:$s1, s2:$s2, t1:$t1, x12:$x12, x13:$x13, x14:$x14, k1:$k1, k8:$k8, k9:$k9, k15:$k15, )';
    }
}

