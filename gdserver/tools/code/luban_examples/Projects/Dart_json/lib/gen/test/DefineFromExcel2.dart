
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

import 'dart:ffi';
import 'dart:collection';
import '/gen/Tables.dart';

import '/gen/test/DemoEnum.dart';
import '/gen/test/DemoFlag.dart';
import '/gen/test/DemoDynamic.dart';
import '/gen/test/Shape.dart';
import '/gen/vec2.dart';
import '/gen/test/DemoE2.dart';
import '/gen/vec3.dart';
import '/gen/vec4.dart';
import '/gen/vec3.dart';


 class DefineFromExcel2 
{
    DefineFromExcel2(
    {
    required this.id,
    required this.x1,
    required this.x5,
    required this.x6,
    required this.x8,
    required this.x10,
    required this.x13,
    required this.x13_2,
    required this.x14,
    required this.x15,
    required this.v2,
    required this.t1,
    required this.k1,
    required this.k2,
    required this.k8,
    required this.k9,
    required this.k10,
    required this.k11,
    required this.v11,
    }
    );

    factory DefineFromExcel2.deserialize(dynamic _buf){
        final id;
        id = _buf['id'] as int;
        final x1;
        x1 = _buf['x1'] as bool;
        final x5;
        x5 = _buf['x5'] as int;
        final x6;
        x6 = _buf['x6'].toDouble();
        final x8;
        x8 = _buf['x8'] as int;
        final x10;
        x10 = _buf['x10'] as String;
        final x13;
        x13 = DemoEnum.fromValue(_buf['x13']);
        final x13_2;
        x13_2 = DemoFlag.fromValue(_buf['x13_2']);
        final x14;
        x14 = DemoDynamic.deserialize(_buf['x14']);
        final x15;
        x15 = Shape.deserialize(_buf['x15']);
        final v2;
        v2 = vec2.deserialize(_buf['v2']);
        final t1;
        t1 = _buf['t1'] as int;
        final k1;
        {var _json0 = _buf['k1'] as List<dynamic>; k1 = List<int>.empty(growable: true); for(var _e0 in _json0) {int _v0; _v0 = _e0 as int; k1.add(_v0); } };
        final k2;
        {var _json0 = _buf['k2'] as List<dynamic>; k2 = List<int>.empty(growable: true); for(var _e0 in _json0) {int _v0; _v0 = _e0 as int; k2.add(_v0); } };
        final k8;
        { var __json0 = _buf['k8']; k8 = Map<int, int>(); for(var __e0 in __json0) { var _k0 = __e0[0] as int; int _v0;  _v0 = __e0[1] as int;  k8[_k0]= _v0; }   };
        final k9;
        {var _json0 = _buf['k9'] as List<dynamic>; k9 = List<DemoE2>.empty(growable: true); for(var _e0 in _json0) {DemoE2 _v0; _v0 = DemoE2.deserialize(_e0); k9.add(_v0); } };
        final k10;
        {var _json0 = _buf['k10'] as List<dynamic>; k10 = List<vec3>.empty(growable: true); for(var _e0 in _json0) {vec3 _v0; _v0 = vec3.deserialize(_e0); k10.add(_v0); } };
        final k11;
        {var _json0 = _buf['k11'] as List<dynamic>; k11 = List<vec4>.empty(growable: true); for(var _e0 in _json0) {vec4 _v0; _v0 = vec4.deserialize(_e0); k11.add(_v0); } };
        final v11;
         if (_buf.containsKey('[fieldName]')) { v11 = vec3.deserialize(_buf['v11']); } else { v11 = null; }
        return DefineFromExcel2(
            id:id,
            x1:x1,
            x5:x5,
            x6:x6,
            x8:x8,
            x10:x10,
            x13:x13,
            x13_2:x13_2,
            x14:x14,
            x15:x15,
            v2:v2,
            t1:t1,
            k1:k1,
            k2:k2,
            k8:k8,
            k9:k9,
            k10:k10,
            k11:k11,
            v11:v11,
       );
    }

    //这是id
    final int id;
    //字段x1
    final bool x1;
    final int x5;
    final double x6;
    final int x8;
    final String x10;
    final DemoEnum x13;
    final DemoFlag x13_2;
    final DemoDynamic x14;
    final Shape x15;
    final vec2 v2;
    final int t1;
    final List<int> k1;
    final List<int> k2;
    final Map<int, int> k8;
    final List<DemoE2> k9;
    final List<vec3> k10;
    final List<vec4> k11;
    final vec3? v11;
    static final int __ID__ = 688816828;
     
    void resolveRef(Tables tables)
    {

        x14?.resolveRef(tables);
        x15?.resolveRef(tables);
    }

    @override
    String toString() {
        return 'DefineFromExcel2(id:$id, x1:$x1, x5:$x5, x6:$x6, x8:$x8, x10:$x10, x13:$x13, x13_2:$x13_2, x14:$x14, x15:$x15, v2:$v2, t1:$t1, k1:$k1, k2:$k2, k8:$k8, k9:$k9, k10:$k10, k11:$k11, v11:$v11, )';
    }
}

