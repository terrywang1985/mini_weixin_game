
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

import 'dart:ffi';
import 'dart:collection';
import '/gen/Tables.dart';


import '/gen/ai/Node.dart';

import '/gen/ai/UeSetDefaultFocus.dart';

import '/gen/ai/ExecuteTimeStatistic.dart';

import '/gen/ai/ChooseTarget.dart';

import '/gen/ai/KeepFaceTarget.dart';

import '/gen/ai/GetOwnerPlayer.dart';

import '/gen/ai/UpdateDailyBehaviorProps.dart';

abstract class Service extends Node
{
    Service(
    {
    required super.id, 
    required super.node_name, 
    }
    );

    factory Service.deserialize(dynamic _buf){
      switch (_buf['\$type'])
      {
        case "UeSetDefaultFocus": return UeSetDefaultFocus.deserialize(_buf);
        case "ExecuteTimeStatistic": return ExecuteTimeStatistic.deserialize(_buf);
        case "ChooseTarget": return ChooseTarget.deserialize(_buf);
        case "KeepFaceTarget": return KeepFaceTarget.deserialize(_buf);
        case "GetOwnerPlayer": return GetOwnerPlayer.deserialize(_buf);
        case "UpdateDailyBehaviorProps": return UpdateDailyBehaviorProps.deserialize(_buf);
        default: throw Exception('unknown type:$_buf[\$type]');
      }
    }

     @override
    void resolveRef(Tables tables)
    {
        super.resolveRef(tables);

    }

    @override
    String toString() {
        return 'Service(id:$id, node_name:$node_name, )';
    }
}

