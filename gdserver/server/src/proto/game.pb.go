// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: game.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ErrorCode int32

const (
	ErrorCode_OK                     ErrorCode = 0
	ErrorCode_INVALID_PARAM          ErrorCode = 1
	ErrorCode_SERVER_ERROR           ErrorCode = 2
	ErrorCode_AUTH_FAILED            ErrorCode = 3
	ErrorCode_NOT_FOUND              ErrorCode = 4
	ErrorCode_ALREADY_EXISTS         ErrorCode = 5
	ErrorCode_NOT_ALLOWED            ErrorCode = 6
	ErrorCode_NOT_SUPPORTED          ErrorCode = 7
	ErrorCode_TIMEOUT                ErrorCode = 8
	ErrorCode_INVALID_STATE          ErrorCode = 9
	ErrorCode_INVALID_ACTION         ErrorCode = 10
	ErrorCode_INVALID_CARD           ErrorCode = 11
	ErrorCode_INVALID_ROOM           ErrorCode = 12
	ErrorCode_INVALID_USER           ErrorCode = 13
	ErrorCode_PLAYER_ALREADY_IN_ROOM ErrorCode = 14
)

// Enum value maps for ErrorCode.
var (
	ErrorCode_name = map[int32]string{
		0:  "OK",
		1:  "INVALID_PARAM",
		2:  "SERVER_ERROR",
		3:  "AUTH_FAILED",
		4:  "NOT_FOUND",
		5:  "ALREADY_EXISTS",
		6:  "NOT_ALLOWED",
		7:  "NOT_SUPPORTED",
		8:  "TIMEOUT",
		9:  "INVALID_STATE",
		10: "INVALID_ACTION",
		11: "INVALID_CARD",
		12: "INVALID_ROOM",
		13: "INVALID_USER",
		14: "PLAYER_ALREADY_IN_ROOM",
	}
	ErrorCode_value = map[string]int32{
		"OK":                     0,
		"INVALID_PARAM":          1,
		"SERVER_ERROR":           2,
		"AUTH_FAILED":            3,
		"NOT_FOUND":              4,
		"ALREADY_EXISTS":         5,
		"NOT_ALLOWED":            6,
		"NOT_SUPPORTED":          7,
		"TIMEOUT":                8,
		"INVALID_STATE":          9,
		"INVALID_ACTION":         10,
		"INVALID_CARD":           11,
		"INVALID_ROOM":           12,
		"INVALID_USER":           13,
		"PLAYER_ALREADY_IN_ROOM": 14,
	}
)

func (x ErrorCode) Enum() *ErrorCode {
	p := new(ErrorCode)
	*p = x
	return p
}

func (x ErrorCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrorCode) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[0].Descriptor()
}

func (ErrorCode) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[0]
}

func (x ErrorCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrorCode.Descriptor instead.
func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

// 消息ID定义
// 响应消息固定比请求消息ID大1
// 例如：LOGIN_REQUEST = 0, LOGIN_RESPONSE = 1
type MessageId int32

const (
	MessageId_LOGIN_REQUEST            MessageId = 0
	MessageId_LOGIN_RESPONSE           MessageId = 1
	MessageId_AUTH_REQUEST             MessageId = 2
	MessageId_AUTH_RESPONSE            MessageId = 3
	MessageId_GET_USER_INFO_REQUEST    MessageId = 4
	MessageId_GET_USER_INFO_RESPONSE   MessageId = 5
	MessageId_GET_ROOM_LIST_REQUEST    MessageId = 6
	MessageId_GET_ROOM_LIST_RESPONSE   MessageId = 7
	MessageId_CREATE_ROOM_REQUEST      MessageId = 8
	MessageId_CREATE_ROOM_RESPONSE     MessageId = 9
	MessageId_JOIN_ROOM_REQUEST        MessageId = 10
	MessageId_JOIN_ROOM_RESPONSE       MessageId = 11
	MessageId_LEAVE_ROOM_REQUEST       MessageId = 12
	MessageId_LEAVE_ROOM_RESPONSE      MessageId = 13
	MessageId_ROOM_STATE_NOTIFICATION  MessageId = 14 //未开始游戏前，房间内玩家信息
	MessageId_GAME_STATE_NOTIFICATION  MessageId = 15 //游戏状态通知（包含当前玩家列表、卡牌桌面状态、当前轮到的玩家索引）
	MessageId_DRAW_CARD_REQUEST        MessageId = 16
	MessageId_DRAW_CARD_RESPONSE       MessageId = 17
	MessageId_GET_READY_REQUEST        MessageId = 18
	MessageId_GET_READY_RESPONSE       MessageId = 19
	MessageId_GAME_ACTION_REQUEST      MessageId = 20
	MessageId_GAME_ACTION_RESPONSE     MessageId = 21
	MessageId_GAME_ACTION_NOTIFICATION MessageId = 22 //游戏动作通知
	MessageId_GAME_START_NOTIFICATION  MessageId = 23 //游戏开始通知
)

// Enum value maps for MessageId.
var (
	MessageId_name = map[int32]string{
		0:  "LOGIN_REQUEST",
		1:  "LOGIN_RESPONSE",
		2:  "AUTH_REQUEST",
		3:  "AUTH_RESPONSE",
		4:  "GET_USER_INFO_REQUEST",
		5:  "GET_USER_INFO_RESPONSE",
		6:  "GET_ROOM_LIST_REQUEST",
		7:  "GET_ROOM_LIST_RESPONSE",
		8:  "CREATE_ROOM_REQUEST",
		9:  "CREATE_ROOM_RESPONSE",
		10: "JOIN_ROOM_REQUEST",
		11: "JOIN_ROOM_RESPONSE",
		12: "LEAVE_ROOM_REQUEST",
		13: "LEAVE_ROOM_RESPONSE",
		14: "ROOM_STATE_NOTIFICATION",
		15: "GAME_STATE_NOTIFICATION",
		16: "DRAW_CARD_REQUEST",
		17: "DRAW_CARD_RESPONSE",
		18: "GET_READY_REQUEST",
		19: "GET_READY_RESPONSE",
		20: "GAME_ACTION_REQUEST",
		21: "GAME_ACTION_RESPONSE",
		22: "GAME_ACTION_NOTIFICATION",
		23: "GAME_START_NOTIFICATION",
	}
	MessageId_value = map[string]int32{
		"LOGIN_REQUEST":            0,
		"LOGIN_RESPONSE":           1,
		"AUTH_REQUEST":             2,
		"AUTH_RESPONSE":            3,
		"GET_USER_INFO_REQUEST":    4,
		"GET_USER_INFO_RESPONSE":   5,
		"GET_ROOM_LIST_REQUEST":    6,
		"GET_ROOM_LIST_RESPONSE":   7,
		"CREATE_ROOM_REQUEST":      8,
		"CREATE_ROOM_RESPONSE":     9,
		"JOIN_ROOM_REQUEST":        10,
		"JOIN_ROOM_RESPONSE":       11,
		"LEAVE_ROOM_REQUEST":       12,
		"LEAVE_ROOM_RESPONSE":      13,
		"ROOM_STATE_NOTIFICATION":  14,
		"GAME_STATE_NOTIFICATION":  15,
		"DRAW_CARD_REQUEST":        16,
		"DRAW_CARD_RESPONSE":       17,
		"GET_READY_REQUEST":        18,
		"GET_READY_RESPONSE":       19,
		"GAME_ACTION_REQUEST":      20,
		"GAME_ACTION_RESPONSE":     21,
		"GAME_ACTION_NOTIFICATION": 22,
		"GAME_START_NOTIFICATION":  23,
	}
)

func (x MessageId) Enum() *MessageId {
	p := new(MessageId)
	*p = x
	return p
}

func (x MessageId) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageId) Descriptor() protoreflect.EnumDescriptor {
	return file_game_proto_enumTypes[1].Descriptor()
}

func (MessageId) Type() protoreflect.EnumType {
	return &file_game_proto_enumTypes[1]
}

func (x MessageId) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageId.Descriptor instead.
func (MessageId) EnumDescriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

type RoomPlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid  uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// 在房间中的位置信息
	PositionX int32 `protobuf:"varint,3,opt,name=position_x,json=positionX,proto3" json:"position_x,omitempty"`
	PositionY int32 `protobuf:"varint,4,opt,name=position_y,json=positionY,proto3" json:"position_y,omitempty"`
	// 玩家准备状态（新增，不影响旧客户端；旧客户端忽略 field=5 将继续显示未准备）
	IsReady bool `protobuf:"varint,5,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"`
}

func (x *RoomPlayer) Reset() {
	*x = RoomPlayer{}
	mi := &file_game_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomPlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomPlayer) ProtoMessage() {}

func (x *RoomPlayer) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomPlayer.ProtoReflect.Descriptor instead.
func (*RoomPlayer) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{0}
}

func (x *RoomPlayer) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *RoomPlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RoomPlayer) GetPositionX() int32 {
	if x != nil {
		return x.PositionX
	}
	return 0
}

func (x *RoomPlayer) GetPositionY() int32 {
	if x != nil {
		return x.PositionY
	}
	return 0
}

func (x *RoomPlayer) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type Room struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MaxPlayers     int32  `protobuf:"varint,3,opt,name=max_players,json=maxPlayers,proto3" json:"max_players,omitempty"`             // 最大玩家数
	CurrentPlayers int32  `protobuf:"varint,4,opt,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"` // 当前玩家数
}

func (x *Room) Reset() {
	*x = Room{}
	mi := &file_game_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{1}
}

func (x *Room) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Room) GetMaxPlayers() int32 {
	if x != nil {
		return x.MaxPlayers
	}
	return 0
}

func (x *Room) GetCurrentPlayers() int32 {
	if x != nil {
		return x.CurrentPlayers
	}
	return 0
}

type RoomDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Room           *Room         `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	CurrentPlayers []*RoomPlayer `protobuf:"bytes,2,rep,name=current_players,json=currentPlayers,proto3" json:"current_players,omitempty"` // 房间内的玩家列表
}

func (x *RoomDetail) Reset() {
	*x = RoomDetail{}
	mi := &file_game_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomDetail) ProtoMessage() {}

func (x *RoomDetail) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomDetail.ProtoReflect.Descriptor instead.
func (*RoomDetail) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{2}
}

func (x *RoomDetail) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *RoomDetail) GetCurrentPlayers() []*RoomPlayer {
	if x != nil {
		return x.CurrentPlayers
	}
	return nil
}

// 客户端 -> 网关
type AuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token           string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                                            // 登录服务器颁发的临时令牌
	ProtocolVersion string `protobuf:"bytes,2,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"` // 协议版本
	ClientVersion   string `protobuf:"bytes,3,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`       // 客户端版本
	DeviceType      string `protobuf:"bytes,4,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`                // 设备类型
	DeviceId        string `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                      // 设备ID
	AppId           string `protobuf:"bytes,6,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`                               // 应用ID
	Nonce           string `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`                                            // 随机数（防重放）
	Timestamp       int64  `protobuf:"varint,8,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                   // 请求时间戳
	Signature       string `protobuf:"bytes,9,opt,name=signature,proto3" json:"signature,omitempty"`                                    // 请求签名
	IsGuest         bool   `protobuf:"varint,10,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`                       // 是否为游客登录（新增）
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	mi := &file_game_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{3}
}

func (x *AuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AuthRequest) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *AuthRequest) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *AuthRequest) GetDeviceType() string {
	if x != nil {
		return x.DeviceType
	}
	return ""
}

func (x *AuthRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *AuthRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *AuthRequest) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *AuthRequest) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *AuthRequest) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *AuthRequest) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

// 网关 -> 客户端
type AuthResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret           ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`                      // 错误码
	Uid           uint64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`                                          // 用户唯一标识
	ConnId        string    `protobuf:"bytes,3,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`                       // 连接ID
	ServerTime    string    `protobuf:"bytes,4,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`           // 服务器时间
	SessionExpiry int64     `protobuf:"varint,5,opt,name=session_expiry,json=sessionExpiry,proto3" json:"session_expiry,omitempty"` // 会话过期时间
	Nickname      string    `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`                                 // 用户昵称
	Level         int32     `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`                                      // 用户等级
	Exp           int64     `protobuf:"varint,8,opt,name=exp,proto3" json:"exp,omitempty"`                                          // 经验值
	Gold          int64     `protobuf:"varint,9,opt,name=gold,proto3" json:"gold,omitempty"`                                        // 金币数量
	Diamond       int64     `protobuf:"varint,10,opt,name=diamond,proto3" json:"diamond,omitempty"`                                 // 钻石数量
	ErrorMsg      string    `protobuf:"bytes,11,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg,omitempty"`                // 错误详细信息
	IsGuest       bool      `protobuf:"varint,12,opt,name=is_guest,json=isGuest,proto3" json:"is_guest,omitempty"`                  // 是否为游客账号（新增）
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_game_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{4}
}

func (x *AuthResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *AuthResponse) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *AuthResponse) GetConnId() string {
	if x != nil {
		return x.ConnId
	}
	return ""
}

func (x *AuthResponse) GetServerTime() string {
	if x != nil {
		return x.ServerTime
	}
	return ""
}

func (x *AuthResponse) GetSessionExpiry() int64 {
	if x != nil {
		return x.SessionExpiry
	}
	return 0
}

func (x *AuthResponse) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *AuthResponse) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *AuthResponse) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *AuthResponse) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *AuthResponse) GetDiamond() int64 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *AuthResponse) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

func (x *AuthResponse) GetIsGuest() bool {
	if x != nil {
		return x.IsGuest
	}
	return false
}

type GetRoomListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetRoomListRequest) Reset() {
	*x = GetRoomListRequest{}
	mi := &file_game_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomListRequest) ProtoMessage() {}

func (x *GetRoomListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomListRequest.ProtoReflect.Descriptor instead.
func (*GetRoomListRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{5}
}

type GetRoomListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	Rooms []*Room   `protobuf:"bytes,2,rep,name=rooms,proto3" json:"rooms,omitempty"`
}

func (x *GetRoomListResponse) Reset() {
	*x = GetRoomListResponse{}
	mi := &file_game_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoomListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoomListResponse) ProtoMessage() {}

func (x *GetRoomListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoomListResponse.ProtoReflect.Descriptor instead.
func (*GetRoomListResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{6}
}

func (x *GetRoomListResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *GetRoomListResponse) GetRooms() []*Room {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	mi := &file_game_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRoomRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        ErrorCode   `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	RoomDetail *RoomDetail `protobuf:"bytes,2,opt,name=room_detail,json=roomDetail,proto3" json:"room_detail,omitempty"` // 返回RoomDetail而不是Room，包含房主位置信息
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	mi := &file_game_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{8}
}

func (x *CreateRoomResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *CreateRoomResponse) GetRoomDetail() *RoomDetail {
	if x != nil {
		return x.RoomDetail
	}
	return nil
}

type JoinRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId string `protobuf:"bytes,1,opt,name=roomId,proto3" json:"roomId,omitempty"`
}

func (x *JoinRoomRequest) Reset() {
	*x = JoinRoomRequest{}
	mi := &file_game_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomRequest) ProtoMessage() {}

func (x *JoinRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomRequest.ProtoReflect.Descriptor instead.
func (*JoinRoomRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{9}
}

func (x *JoinRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type JoinRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret        ErrorCode   `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	RoomDetail *RoomDetail `protobuf:"bytes,2,opt,name=room_detail,json=roomDetail,proto3" json:"room_detail,omitempty"` // 返回RoomDetail而不是仅RoomId，包含所有玩家位置信息
}

func (x *JoinRoomResponse) Reset() {
	*x = JoinRoomResponse{}
	mi := &file_game_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRoomResponse) ProtoMessage() {}

func (x *JoinRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRoomResponse.ProtoReflect.Descriptor instead.
func (*JoinRoomResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{10}
}

func (x *JoinRoomResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *JoinRoomResponse) GetRoomDetail() *RoomDetail {
	if x != nil {
		return x.RoomDetail
	}
	return nil
}

type LeaveRoomRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
}

func (x *LeaveRoomRequest) Reset() {
	*x = LeaveRoomRequest{}
	mi := &file_game_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomRequest) ProtoMessage() {}

func (x *LeaveRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomRequest.ProtoReflect.Descriptor instead.
func (*LeaveRoomRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{11}
}

func (x *LeaveRoomRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

type LeaveRoomResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	Room *Room     `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
}

func (x *LeaveRoomResponse) Reset() {
	*x = LeaveRoomResponse{}
	mi := &file_game_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRoomResponse) ProtoMessage() {}

func (x *LeaveRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRoomResponse.ProtoReflect.Descriptor instead.
func (*LeaveRoomResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{12}
}

func (x *LeaveRoomResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *LeaveRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

type GetReadyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId string `protobuf:"bytes,1,opt,name=playerId,proto3" json:"playerId,omitempty"`
	IsReady  bool   `protobuf:"varint,2,opt,name=is_ready,json=isReady,proto3" json:"is_ready,omitempty"` // 玩家准备状态, true表示准备, false表示取消准备
}

func (x *GetReadyRequest) Reset() {
	*x = GetReadyRequest{}
	mi := &file_game_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadyRequest) ProtoMessage() {}

func (x *GetReadyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadyRequest.ProtoReflect.Descriptor instead.
func (*GetReadyRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{13}
}

func (x *GetReadyRequest) GetPlayerId() string {
	if x != nil {
		return x.PlayerId
	}
	return ""
}

func (x *GetReadyRequest) GetIsReady() bool {
	if x != nil {
		return x.IsReady
	}
	return false
}

type GetReadyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
}

func (x *GetReadyResponse) Reset() {
	*x = GetReadyResponse{}
	mi := &file_game_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadyResponse) ProtoMessage() {}

func (x *GetReadyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadyResponse.ProtoReflect.Descriptor instead.
func (*GetReadyResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{14}
}

func (x *GetReadyResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

// 游戏开始通知
type GameStartNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RoomId  string        `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Players []*RoomPlayer `protobuf:"bytes,2,rep,name=players,proto3" json:"players,omitempty"` // 游戏开始时的玩家列表
}

func (x *GameStartNotification) Reset() {
	*x = GameStartNotification{}
	mi := &file_game_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStartNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStartNotification) ProtoMessage() {}

func (x *GameStartNotification) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStartNotification.ProtoReflect.Descriptor instead.
func (*GameStartNotification) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{15}
}

func (x *GameStartNotification) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GameStartNotification) GetPlayers() []*RoomPlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

// 背包信息
type BackpackInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards []*Card `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *BackpackInfo) Reset() {
	*x = BackpackInfo{}
	mi := &file_game_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BackpackInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BackpackInfo) ProtoMessage() {}

func (x *BackpackInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BackpackInfo.ProtoReflect.Descriptor instead.
func (*BackpackInfo) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{16}
}

func (x *BackpackInfo) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid           uint64        `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Name          string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Exp           int64         `protobuf:"varint,3,opt,name=exp,proto3" json:"exp,omitempty"`
	Gold          int64         `protobuf:"varint,4,opt,name=gold,proto3" json:"gold,omitempty"`
	Diamond       int64         `protobuf:"varint,5,opt,name=diamond,proto3" json:"diamond,omitempty"`
	DrawCardCount int32         `protobuf:"varint,6,opt,name=draw_card_count,json=drawCardCount,proto3" json:"draw_card_count,omitempty"`
	Backpack      *BackpackInfo `protobuf:"bytes,7,opt,name=backpack,proto3" json:"backpack,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	mi := &file_game_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{17}
}

func (x *UserInfo) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetExp() int64 {
	if x != nil {
		return x.Exp
	}
	return 0
}

func (x *UserInfo) GetGold() int64 {
	if x != nil {
		return x.Gold
	}
	return 0
}

func (x *UserInfo) GetDiamond() int64 {
	if x != nil {
		return x.Diamond
	}
	return 0
}

func (x *UserInfo) GetDrawCardCount() int32 {
	if x != nil {
		return x.DrawCardCount
	}
	return 0
}

func (x *UserInfo) GetBackpack() *BackpackInfo {
	if x != nil {
		return x.Backpack
	}
	return nil
}

type GetUserInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *GetUserInfoRequest) Reset() {
	*x = GetUserInfoRequest{}
	mi := &file_game_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoRequest) ProtoMessage() {}

func (x *GetUserInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoRequest.ProtoReflect.Descriptor instead.
func (*GetUserInfoRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{18}
}

func (x *GetUserInfoRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetUserInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	UserInfo *UserInfo `protobuf:"bytes,2,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`
}

func (x *GetUserInfoResponse) Reset() {
	*x = GetUserInfoResponse{}
	mi := &file_game_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserInfoResponse) ProtoMessage() {}

func (x *GetUserInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserInfoResponse.ProtoReflect.Descriptor instead.
func (*GetUserInfoResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{19}
}

func (x *GetUserInfoResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *GetUserInfoResponse) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

// 抽卡
type DrawCardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid   uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
	Count int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DrawCardRequest) Reset() {
	*x = DrawCardRequest{}
	mi := &file_game_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrawCardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardRequest) ProtoMessage() {}

func (x *DrawCardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardRequest.ProtoReflect.Descriptor instead.
func (*DrawCardRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{20}
}

func (x *DrawCardRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *DrawCardRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type DrawCardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret   ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	Cards []*Card   `protobuf:"bytes,2,rep,name=cards,proto3" json:"cards,omitempty"`
}

func (x *DrawCardResponse) Reset() {
	*x = DrawCardResponse{}
	mi := &file_game_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrawCardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrawCardResponse) ProtoMessage() {}

func (x *DrawCardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrawCardResponse.ProtoReflect.Descriptor instead.
func (*DrawCardResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{21}
}

func (x *DrawCardResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *DrawCardResponse) GetCards() []*Card {
	if x != nil {
		return x.Cards
	}
	return nil
}

// 开始游戏
type StartGameBattleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid uint64 `protobuf:"varint,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *StartGameBattleRequest) Reset() {
	*x = StartGameBattleRequest{}
	mi := &file_game_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameBattleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameBattleRequest) ProtoMessage() {}

func (x *StartGameBattleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameBattleRequest.ProtoReflect.Descriptor instead.
func (*StartGameBattleRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{22}
}

func (x *StartGameBattleRequest) GetUid() uint64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type StartGameBattleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	BattleId         string    `protobuf:"bytes,2,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`                           // 战斗房间ID
	BattleServerAddr string    `protobuf:"bytes,3,opt,name=battle_server_addr,json=battleServerAddr,proto3" json:"battle_server_addr,omitempty"` // 战斗服务器地址
}

func (x *StartGameBattleResponse) Reset() {
	*x = StartGameBattleResponse{}
	mi := &file_game_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartGameBattleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartGameBattleResponse) ProtoMessage() {}

func (x *StartGameBattleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartGameBattleResponse.ProtoReflect.Descriptor instead.
func (*StartGameBattleResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{23}
}

func (x *StartGameBattleResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *StartGameBattleResponse) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *StartGameBattleResponse) GetBattleServerAddr() string {
	if x != nil {
		return x.BattleServerAddr
	}
	return ""
}

// 游戏动作
type GameActionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action *GameAction `protobuf:"bytes,1,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *GameActionRequest) Reset() {
	*x = GameActionRequest{}
	mi := &file_game_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameActionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionRequest) ProtoMessage() {}

func (x *GameActionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionRequest.ProtoReflect.Descriptor instead.
func (*GameActionRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{24}
}

func (x *GameActionRequest) GetAction() *GameAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type GameActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
}

func (x *GameActionResponse) Reset() {
	*x = GameActionResponse{}
	mi := &file_game_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameActionResponse) ProtoMessage() {}

func (x *GameActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameActionResponse.ProtoReflect.Descriptor instead.
func (*GameActionResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{25}
}

func (x *GameActionResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

// 玩家初始数据（用于创建房间时传递）
type PlayerInitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   uint64 `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	PlayerName string `protobuf:"bytes,2,opt,name=player_name,json=playerName,proto3" json:"player_name,omitempty"` // 玩家名称
}

func (x *PlayerInitData) Reset() {
	*x = PlayerInitData{}
	mi := &file_game_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerInitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerInitData) ProtoMessage() {}

func (x *PlayerInitData) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerInitData.ProtoReflect.Descriptor instead.
func (*PlayerInitData) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{26}
}

func (x *PlayerInitData) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerInitData) GetPlayerName() string {
	if x != nil {
		return x.PlayerName
	}
	return ""
}

// 新增消息体
type MatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerData *PlayerInitData `protobuf:"bytes,1,opt,name=player_data,json=playerData,proto3" json:"player_data,omitempty"`
}

func (x *MatchRequest) Reset() {
	*x = MatchRequest{}
	mi := &file_game_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchRequest) ProtoMessage() {}

func (x *MatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchRequest.ProtoReflect.Descriptor instead.
func (*MatchRequest) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{27}
}

func (x *MatchRequest) GetPlayerData() *PlayerInitData {
	if x != nil {
		return x.PlayerData
	}
	return nil
}

type MatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret              ErrorCode `protobuf:"varint,1,opt,name=ret,proto3,enum=game.ErrorCode" json:"ret,omitempty"`
	BattleId         string    `protobuf:"bytes,2,opt,name=battle_id,json=battleId,proto3" json:"battle_id,omitempty"`
	BattleServerAddr string    `protobuf:"bytes,3,opt,name=battle_server_addr,json=battleServerAddr,proto3" json:"battle_server_addr,omitempty"`
}

func (x *MatchResponse) Reset() {
	*x = MatchResponse{}
	mi := &file_game_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MatchResponse) ProtoMessage() {}

func (x *MatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MatchResponse.ProtoReflect.Descriptor instead.
func (*MatchResponse) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{28}
}

func (x *MatchResponse) GetRet() ErrorCode {
	if x != nil {
		return x.Ret
	}
	return ErrorCode_OK
}

func (x *MatchResponse) GetBattleId() string {
	if x != nil {
		return x.BattleId
	}
	return ""
}

func (x *MatchResponse) GetBattleServerAddr() string {
	if x != nil {
		return x.BattleServerAddr
	}
	return ""
}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId    string    `protobuf:"bytes,1,opt,name=clientId,proto3" json:"clientId,omitempty"`          //客户端唯一标识
	MsgSerialNo int32     `protobuf:"varint,2,opt,name=msgSerialNo,proto3" json:"msgSerialNo,omitempty"`   //消息序列号, 每条消息加1
	Id          MessageId `protobuf:"varint,3,opt,name=id,proto3,enum=game.MessageId" json:"id,omitempty"` //消息ID
	Data        []byte    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                  //消息体
}

func (x *Message) Reset() {
	*x = Message{}
	mi := &file_game_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_game_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_game_proto_rawDescGZIP(), []int{29}
}

func (x *Message) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *Message) GetMsgSerialNo() int32 {
	if x != nil {
		return x.MsgSerialNo
	}
	return 0
}

func (x *Message) GetId() MessageId {
	if x != nil {
		return x.Id
	}
	return MessageId_LOGIN_REQUEST
}

func (x *Message) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_game_proto protoreflect.FileDescriptor

var file_game_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x61,
	0x6d, 0x65, 0x1a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8b, 0x01, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x58, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x59, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x74,
	0x0a, 0x04, 0x52, 0x6f, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61,
	0x78, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6d, 0x61, 0x78, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x73, 0x22, 0x67, 0x0a, 0x0a, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f,
	0x6f, 0x6d, 0x12, 0x39, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0xb7, 0x02,
	0x0a, 0x0b, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25,
	0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f,
	0x6e, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x22, 0xce, 0x02, 0x0a, 0x0c, 0x41, 0x75, 0x74, 0x68,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65,
	0x78, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f, 0x6e, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x67, 0x75, 0x65, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x47, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x52,
	0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x5a,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x52, 0x6f, 0x6f, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x20, 0x0a, 0x05, 0x72, 0x6f, 0x6f, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52,
	0x6f, 0x6f, 0x6d, 0x52, 0x05, 0x72, 0x6f, 0x6f, 0x6d, 0x73, 0x22, 0x27, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x31, 0x0a, 0x0b,
	0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22,
	0x29, 0x0a, 0x0f, 0x4a, 0x6f, 0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x10, 0x4a, 0x6f,
	0x69, 0x6e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x31, 0x0a, 0x0b, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x6f,
	0x6f, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x0a, 0x72, 0x6f, 0x6f, 0x6d, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x22, 0x2e, 0x0a, 0x10, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x11, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x52, 0x6f, 0x6f,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x6d, 0x22, 0x48, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x52, 0x65, 0x61, 0x64, 0x79, 0x22, 0x35, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22, 0x5c, 0x0a,
	0x15, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x52, 0x6f, 0x6f, 0x6d, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x22, 0x32, 0x0a, 0x0c, 0x42,
	0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22,
	0xc8, 0x01, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x03, 0x65, 0x78, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x61, 0x6d,
	0x6f, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x64, 0x69, 0x61, 0x6d, 0x6f,
	0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x64, 0x72, 0x61, 0x77, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x64, 0x72, 0x61,
	0x77, 0x43, 0x61, 0x72, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x08, 0x62, 0x61,
	0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x2e, 0x42, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x70, 0x61, 0x63, 0x6b, 0x22, 0x26, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75,
	0x69, 0x64, 0x22, 0x65, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x2b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x39, 0x0a, 0x0f, 0x44, 0x72, 0x61,
	0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59, 0x0a, 0x10, 0x44, 0x72, 0x61, 0x77, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x22,
	0x2a, 0x0a, 0x16, 0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x87, 0x01, 0x0a, 0x17,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x47, 0x61, 0x6d, 0x65, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x37, 0x0a, 0x12, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x22,
	0x4e, 0x0a, 0x0e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x45, 0x0a, 0x0c, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7d, 0x0a, 0x0d, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61,
	0x74, 0x74, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62,
	0x61, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x22, 0x7c, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6d, 0x73, 0x67, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1f,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x2a, 0x96, 0x02, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x02, 0x12, 0x0f,
	0x0a, 0x0b, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12,
	0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x12,
	0x0a, 0x0e, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x45, 0x58, 0x49, 0x53, 0x54, 0x53,
	0x10, 0x05, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x4c, 0x4c, 0x4f, 0x57, 0x45,
	0x44, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x50, 0x50, 0x4f,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d, 0x45, 0x4f, 0x55,
	0x54, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x45, 0x10, 0x09, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0a, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x0c, 0x12, 0x10,
	0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x0d,
	0x12, 0x1a, 0x0a, 0x16, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x41, 0x4c, 0x52, 0x45, 0x41,
	0x44, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x10, 0x0e, 0x2a, 0xde, 0x04, 0x0a,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x4f,
	0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x12, 0x0a,
	0x0e, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10,
	0x01, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53,
	0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x53,
	0x45, 0x52, 0x5f, 0x49, 0x4e, 0x46, 0x4f, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x04, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x45, 0x54, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x49, 0x4e,
	0x46, 0x4f, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x05, 0x12, 0x19, 0x0a,
	0x15, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x06, 0x12, 0x1a, 0x0a, 0x16, 0x47, 0x45, 0x54, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x4c, 0x49, 0x53, 0x54, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e,
	0x53, 0x45, 0x10, 0x07, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52,
	0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x08, 0x12, 0x18, 0x0a,
	0x14, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x09, 0x12, 0x15, 0x0a, 0x11, 0x4a, 0x4f, 0x49, 0x4e, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0a, 0x12, 0x16,
	0x0a, 0x12, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x53, 0x50,
	0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f,
	0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x0c, 0x12, 0x17,
	0x0a, 0x13, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x52, 0x4f, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x53,
	0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x0d, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x4f, 0x4f, 0x4d, 0x5f,
	0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x0f, 0x12, 0x15, 0x0a, 0x11, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x10, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x52, 0x41, 0x57,
	0x5f, 0x43, 0x41, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x11,
	0x12, 0x15, 0x0a, 0x11, 0x47, 0x45, 0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x12, 0x12, 0x16, 0x0a, 0x12, 0x47, 0x45, 0x54, 0x5f, 0x52,
	0x45, 0x41, 0x44, 0x59, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45, 0x10, 0x13, 0x12,
	0x17, 0x0a, 0x13, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x14, 0x12, 0x18, 0x0a, 0x14, 0x47, 0x41, 0x4d, 0x45,
	0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x15, 0x12, 0x1c, 0x0a, 0x18, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x16,
	0x12, 0x1b, 0x0a, 0x17, 0x47, 0x41, 0x4d, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x5f, 0x4e,
	0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x17, 0x42, 0x12, 0x5a,
	0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_game_proto_rawDescOnce sync.Once
	file_game_proto_rawDescData = file_game_proto_rawDesc
)

func file_game_proto_rawDescGZIP() []byte {
	file_game_proto_rawDescOnce.Do(func() {
		file_game_proto_rawDescData = protoimpl.X.CompressGZIP(file_game_proto_rawDescData)
	})
	return file_game_proto_rawDescData
}

var file_game_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_game_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_game_proto_goTypes = []any{
	(ErrorCode)(0),                  // 0: game.ErrorCode
	(MessageId)(0),                  // 1: game.MessageId
	(*RoomPlayer)(nil),              // 2: game.RoomPlayer
	(*Room)(nil),                    // 3: game.Room
	(*RoomDetail)(nil),              // 4: game.RoomDetail
	(*AuthRequest)(nil),             // 5: game.AuthRequest
	(*AuthResponse)(nil),            // 6: game.AuthResponse
	(*GetRoomListRequest)(nil),      // 7: game.GetRoomListRequest
	(*GetRoomListResponse)(nil),     // 8: game.GetRoomListResponse
	(*CreateRoomRequest)(nil),       // 9: game.CreateRoomRequest
	(*CreateRoomResponse)(nil),      // 10: game.CreateRoomResponse
	(*JoinRoomRequest)(nil),         // 11: game.JoinRoomRequest
	(*JoinRoomResponse)(nil),        // 12: game.JoinRoomResponse
	(*LeaveRoomRequest)(nil),        // 13: game.LeaveRoomRequest
	(*LeaveRoomResponse)(nil),       // 14: game.LeaveRoomResponse
	(*GetReadyRequest)(nil),         // 15: game.GetReadyRequest
	(*GetReadyResponse)(nil),        // 16: game.GetReadyResponse
	(*GameStartNotification)(nil),   // 17: game.GameStartNotification
	(*BackpackInfo)(nil),            // 18: game.BackpackInfo
	(*UserInfo)(nil),                // 19: game.UserInfo
	(*GetUserInfoRequest)(nil),      // 20: game.GetUserInfoRequest
	(*GetUserInfoResponse)(nil),     // 21: game.GetUserInfoResponse
	(*DrawCardRequest)(nil),         // 22: game.DrawCardRequest
	(*DrawCardResponse)(nil),        // 23: game.DrawCardResponse
	(*StartGameBattleRequest)(nil),  // 24: game.StartGameBattleRequest
	(*StartGameBattleResponse)(nil), // 25: game.StartGameBattleResponse
	(*GameActionRequest)(nil),       // 26: game.GameActionRequest
	(*GameActionResponse)(nil),      // 27: game.GameActionResponse
	(*PlayerInitData)(nil),          // 28: game.PlayerInitData
	(*MatchRequest)(nil),            // 29: game.MatchRequest
	(*MatchResponse)(nil),           // 30: game.MatchResponse
	(*Message)(nil),                 // 31: game.Message
	(*Card)(nil),                    // 32: battle.Card
	(*GameAction)(nil),              // 33: battle.GameAction
}
var file_game_proto_depIdxs = []int32{
	3,  // 0: game.RoomDetail.room:type_name -> game.Room
	2,  // 1: game.RoomDetail.current_players:type_name -> game.RoomPlayer
	0,  // 2: game.AuthResponse.ret:type_name -> game.ErrorCode
	0,  // 3: game.GetRoomListResponse.ret:type_name -> game.ErrorCode
	3,  // 4: game.GetRoomListResponse.rooms:type_name -> game.Room
	0,  // 5: game.CreateRoomResponse.ret:type_name -> game.ErrorCode
	4,  // 6: game.CreateRoomResponse.room_detail:type_name -> game.RoomDetail
	0,  // 7: game.JoinRoomResponse.ret:type_name -> game.ErrorCode
	4,  // 8: game.JoinRoomResponse.room_detail:type_name -> game.RoomDetail
	0,  // 9: game.LeaveRoomResponse.ret:type_name -> game.ErrorCode
	3,  // 10: game.LeaveRoomResponse.room:type_name -> game.Room
	0,  // 11: game.GetReadyResponse.ret:type_name -> game.ErrorCode
	2,  // 12: game.GameStartNotification.players:type_name -> game.RoomPlayer
	32, // 13: game.BackpackInfo.cards:type_name -> battle.Card
	18, // 14: game.UserInfo.backpack:type_name -> game.BackpackInfo
	0,  // 15: game.GetUserInfoResponse.ret:type_name -> game.ErrorCode
	19, // 16: game.GetUserInfoResponse.user_info:type_name -> game.UserInfo
	0,  // 17: game.DrawCardResponse.ret:type_name -> game.ErrorCode
	32, // 18: game.DrawCardResponse.cards:type_name -> battle.Card
	0,  // 19: game.StartGameBattleResponse.ret:type_name -> game.ErrorCode
	33, // 20: game.GameActionRequest.action:type_name -> battle.GameAction
	0,  // 21: game.GameActionResponse.ret:type_name -> game.ErrorCode
	28, // 22: game.MatchRequest.player_data:type_name -> game.PlayerInitData
	0,  // 23: game.MatchResponse.ret:type_name -> game.ErrorCode
	1,  // 24: game.Message.id:type_name -> game.MessageId
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_game_proto_init() }
func file_game_proto_init() {
	if File_game_proto != nil {
		return
	}
	file_battle_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_game_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_game_proto_goTypes,
		DependencyIndexes: file_game_proto_depIdxs,
		EnumInfos:         file_game_proto_enumTypes,
		MessageInfos:      file_game_proto_msgTypes,
	}.Build()
	File_game_proto = out.File
	file_game_proto_rawDesc = nil
	file_game_proto_goTypes = nil
	file_game_proto_depIdxs = nil
}
