// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v5.29.0
// source: battle.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --------------------
// 操作指令定义
// --------------------
type ActionType int32

const (
	ActionType_ACTION_UNKNOWN ActionType = 0
	ActionType_PLACE_CARD     ActionType = 1 // 出牌
	ActionType_SKIP_TURN      ActionType = 2 // 跳过回合
	ActionType_AUTO_CHAT      ActionType = 3 // 自动聊天
	ActionType_SURRENDER      ActionType = 4 // 投降
	ActionType_CHAR_MOVE      ActionType = 5 // 移动角色
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_UNKNOWN",
		1: "PLACE_CARD",
		2: "SKIP_TURN",
		3: "AUTO_CHAT",
		4: "SURRENDER",
		5: "CHAR_MOVE",
	}
	ActionType_value = map[string]int32{
		"ACTION_UNKNOWN": 0,
		"PLACE_CARD":     1,
		"SKIP_TURN":      2,
		"AUTO_CHAT":      3,
		"SURRENDER":      4,
		"CHAR_MOVE":      5,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[0].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[0]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0}
}

// --------------------
// 服务器状态同步（帧消息）
// --------------------
type ActionResult int32

const (
	ActionResult_SUCCESS              ActionResult = 0
	ActionResult_ERROR_INVALID_TARGET ActionResult = 1 // 无效的目标位置
	ActionResult_ERROR_CARD_NOT_FOUND ActionResult = 2 // 卡牌未找到
	ActionResult_ERROR_NOT_YOUR_TURN  ActionResult = 3 // 不是你的回合
	ActionResult_ERROR_UNKNOWN        ActionResult = 4 // 未知错误
)

// Enum value maps for ActionResult.
var (
	ActionResult_name = map[int32]string{
		0: "SUCCESS",
		1: "ERROR_INVALID_TARGET",
		2: "ERROR_CARD_NOT_FOUND",
		3: "ERROR_NOT_YOUR_TURN",
		4: "ERROR_UNKNOWN",
	}
	ActionResult_value = map[string]int32{
		"SUCCESS":              0,
		"ERROR_INVALID_TARGET": 1,
		"ERROR_CARD_NOT_FOUND": 2,
		"ERROR_NOT_YOUR_TURN":  3,
		"ERROR_UNKNOWN":        4,
	}
)

func (x ActionResult) Enum() *ActionResult {
	p := new(ActionResult)
	*p = x
	return p
}

func (x ActionResult) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionResult) Descriptor() protoreflect.EnumDescriptor {
	return file_battle_proto_enumTypes[1].Descriptor()
}

func (ActionResult) Type() protoreflect.EnumType {
	return &file_battle_proto_enumTypes[1]
}

func (x ActionResult) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionResult.Descriptor instead.
func (ActionResult) EnumDescriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1}
}

// 卡牌定义
type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Image       string `protobuf:"bytes,4,opt,name=image,proto3" json:"image,omitempty"`
	Rarity      int32  `protobuf:"varint,5,opt,name=rarity,proto3" json:"rarity,omitempty"`
	SpellClass  int32  `protobuf:"varint,6,opt,name=spell_class,json=spellClass,proto3" json:"spell_class,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	mi := &file_battle_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{0}
}

func (x *Card) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Card) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Card) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Card) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Card) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *Card) GetSpellClass() int32 {
	if x != nil {
		return x.SpellClass
	}
	return 0
}

// --------------------
// 基础数据类型定义
type WordCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                               // 卡牌ID
	Word        string `protobuf:"bytes,2,opt,name=word,proto3" json:"word,omitempty"`                            // 卡牌名称
	WordClass   string `protobuf:"bytes,3,opt,name=word_class,json=wordClass,proto3" json:"word_class,omitempty"` // 名词
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`              // 卡牌描述
}

func (x *WordCard) Reset() {
	*x = WordCard{}
	mi := &file_battle_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordCard) ProtoMessage() {}

func (x *WordCard) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordCard.ProtoReflect.Descriptor instead.
func (*WordCard) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{1}
}

func (x *WordCard) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WordCard) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordCard) GetWordClass() string {
	if x != nil {
		return x.WordClass
	}
	return ""
}

func (x *WordCard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// 卡牌桌面
type CardTable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cards    []*WordCard `protobuf:"bytes,1,rep,name=cards,proto3" json:"cards,omitempty"`       // 桌面上的卡牌
	Sentence string      `protobuf:"bytes,2,opt,name=sentence,proto3" json:"sentence,omitempty"` // 当前的句子
}

func (x *CardTable) Reset() {
	*x = CardTable{}
	mi := &file_battle_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CardTable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardTable) ProtoMessage() {}

func (x *CardTable) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardTable.ProtoReflect.Descriptor instead.
func (*CardTable) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{2}
}

func (x *CardTable) GetCards() []*WordCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *CardTable) GetSentence() string {
	if x != nil {
		return x.Sentence
	}
	return ""
}

// 玩家数据（每个玩家拥有手牌、牌组等信息）
type BattlePlayer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name         string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Cards        []*WordCard `protobuf:"bytes,3,rep,name=cards,proto3" json:"cards,omitempty"`                                    // 手牌（例如：最多5张卡牌）
	CurrentScore int32       `protobuf:"varint,4,opt,name=current_score,json=currentScore,proto3" json:"current_score,omitempty"` // 当前分数
}

func (x *BattlePlayer) Reset() {
	*x = BattlePlayer{}
	mi := &file_battle_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BattlePlayer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BattlePlayer) ProtoMessage() {}

func (x *BattlePlayer) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BattlePlayer.ProtoReflect.Descriptor instead.
func (*BattlePlayer) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{3}
}

func (x *BattlePlayer) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BattlePlayer) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BattlePlayer) GetCards() []*WordCard {
	if x != nil {
		return x.Cards
	}
	return nil
}

func (x *BattlePlayer) GetCurrentScore() int32 {
	if x != nil {
		return x.CurrentScore
	}
	return 0
}

type CharacterMoveAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromX int32 `protobuf:"varint,1,opt,name=from_x,json=fromX,proto3" json:"from_x,omitempty"` // 起始位置X
	FromY int32 `protobuf:"varint,2,opt,name=from_y,json=fromY,proto3" json:"from_y,omitempty"` // 起始位置Y
	ToX   int32 `protobuf:"varint,3,opt,name=to_x,json=toX,proto3" json:"to_x,omitempty"`       // 目标位置X
	ToY   int32 `protobuf:"varint,4,opt,name=to_y,json=toY,proto3" json:"to_y,omitempty"`       // 目标位置Y
}

func (x *CharacterMoveAction) Reset() {
	*x = CharacterMoveAction{}
	mi := &file_battle_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CharacterMoveAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacterMoveAction) ProtoMessage() {}

func (x *CharacterMoveAction) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacterMoveAction.ProtoReflect.Descriptor instead.
func (*CharacterMoveAction) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{4}
}

func (x *CharacterMoveAction) GetFromX() int32 {
	if x != nil {
		return x.FromX
	}
	return 0
}

func (x *CharacterMoveAction) GetFromY() int32 {
	if x != nil {
		return x.FromY
	}
	return 0
}

func (x *CharacterMoveAction) GetToX() int32 {
	if x != nil {
		return x.ToX
	}
	return 0
}

func (x *CharacterMoveAction) GetToY() int32 {
	if x != nil {
		return x.ToY
	}
	return 0
}

// 拖放卡牌操作
type PlaceCardAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CardId      uint64 `protobuf:"varint,1,opt,name=card_id,json=cardId,proto3" json:"card_id,omitempty"`
	TargetIndex int32  `protobuf:"varint,2,opt,name=target_index,json=targetIndex,proto3" json:"target_index,omitempty"` // 目标位置索引（例如：放置到桌面上的某个位置）
}

func (x *PlaceCardAction) Reset() {
	*x = PlaceCardAction{}
	mi := &file_battle_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlaceCardAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceCardAction) ProtoMessage() {}

func (x *PlaceCardAction) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceCardAction.ProtoReflect.Descriptor instead.
func (*PlaceCardAction) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{5}
}

func (x *PlaceCardAction) GetCardId() uint64 {
	if x != nil {
		return x.CardId
	}
	return 0
}

func (x *PlaceCardAction) GetTargetIndex() int32 {
	if x != nil {
		return x.TargetIndex
	}
	return 0
}

// 游戏操作日志，记录每次客户端的指令操作
type GameAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PlayerId   uint64     `protobuf:"varint,1,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"`
	ActionType ActionType `protobuf:"varint,2,opt,name=action_type,json=actionType,proto3,enum=battle.ActionType" json:"action_type,omitempty"`
	Timestamp  int64      `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Unix 毫秒时间戳
	// Types that are assignable to ActionDetail:
	//
	//	*GameAction_PlaceCard
	//	*GameAction_CharMove
	ActionDetail isGameAction_ActionDetail `protobuf_oneof:"action_detail"`
}

func (x *GameAction) Reset() {
	*x = GameAction{}
	mi := &file_battle_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameAction) ProtoMessage() {}

func (x *GameAction) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameAction.ProtoReflect.Descriptor instead.
func (*GameAction) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{6}
}

func (x *GameAction) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *GameAction) GetActionType() ActionType {
	if x != nil {
		return x.ActionType
	}
	return ActionType_ACTION_UNKNOWN
}

func (x *GameAction) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (m *GameAction) GetActionDetail() isGameAction_ActionDetail {
	if m != nil {
		return m.ActionDetail
	}
	return nil
}

func (x *GameAction) GetPlaceCard() *PlaceCardAction {
	if x, ok := x.GetActionDetail().(*GameAction_PlaceCard); ok {
		return x.PlaceCard
	}
	return nil
}

func (x *GameAction) GetCharMove() *CharacterMoveAction {
	if x, ok := x.GetActionDetail().(*GameAction_CharMove); ok {
		return x.CharMove
	}
	return nil
}

type isGameAction_ActionDetail interface {
	isGameAction_ActionDetail()
}

type GameAction_PlaceCard struct {
	PlaceCard *PlaceCardAction `protobuf:"bytes,4,opt,name=place_card,json=placeCard,proto3,oneof"`
}

type GameAction_CharMove struct {
	CharMove *CharacterMoveAction `protobuf:"bytes,5,opt,name=char_move,json=charMove,proto3,oneof"`
}

func (*GameAction_PlaceCard) isGameAction_ActionDetail() {}

func (*GameAction_CharMove) isGameAction_ActionDetail() {}

type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result     ActionResult `protobuf:"varint,1,opt,name=result,proto3,enum=battle.ActionResult" json:"result,omitempty"`
	ServerTime int64        `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	State      *GameState   `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	mi := &file_battle_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{7}
}

func (x *ActionResponse) GetResult() ActionResult {
	if x != nil {
		return x.Result
	}
	return ActionResult_SUCCESS
}

func (x *ActionResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *ActionResponse) GetState() *GameState {
	if x != nil {
		return x.State
	}
	return nil
}

type GameState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Players     []*BattlePlayer `protobuf:"bytes,1,rep,name=players,proto3" json:"players,omitempty"`                             // 当前玩家列表
	CardTable   *CardTable      `protobuf:"bytes,2,opt,name=card_table,json=cardTable,proto3" json:"card_table,omitempty"`        // 当前卡牌桌面状态
	CurrentTurn int32           `protobuf:"varint,3,opt,name=current_turn,json=currentTurn,proto3" json:"current_turn,omitempty"` // 当前轮到的玩家索引
}

func (x *GameState) Reset() {
	*x = GameState{}
	mi := &file_battle_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameState) ProtoMessage() {}

func (x *GameState) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameState.ProtoReflect.Descriptor instead.
func (*GameState) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{8}
}

func (x *GameState) GetPlayers() []*BattlePlayer {
	if x != nil {
		return x.Players
	}
	return nil
}

func (x *GameState) GetCardTable() *CardTable {
	if x != nil {
		return x.CardTable
	}
	return nil
}

func (x *GameState) GetCurrentTurn() int32 {
	if x != nil {
		return x.CurrentTurn
	}
	return 0
}

// 游戏状态通知
// 包含当前玩家列表、卡牌桌面状态、当前轮到的玩家索引
type GameStateNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeNotifiedUid uint64     `protobuf:"varint,1,opt,name=be_notified_uid,json=beNotifiedUid,proto3" json:"be_notified_uid,omitempty"` // 被通知的用户ID
	RoomId        string     `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	GameState     *GameState `protobuf:"bytes,3,opt,name=game_state,json=gameState,proto3" json:"game_state,omitempty"` // 游戏状态
}

func (x *GameStateNotify) Reset() {
	*x = GameStateNotify{}
	mi := &file_battle_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GameStateNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GameStateNotify) ProtoMessage() {}

func (x *GameStateNotify) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GameStateNotify.ProtoReflect.Descriptor instead.
func (*GameStateNotify) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{9}
}

func (x *GameStateNotify) GetBeNotifiedUid() uint64 {
	if x != nil {
		return x.BeNotifiedUid
	}
	return 0
}

func (x *GameStateNotify) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GameStateNotify) GetGameState() *GameState {
	if x != nil {
		return x.GameState
	}
	return nil
}

// 玩家操作请求
type PlayerActionNotify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BeNotifiedUid uint64      `protobuf:"varint,1,opt,name=be_notified_uid,json=beNotifiedUid,proto3" json:"be_notified_uid,omitempty"` // 被通知的用户ID
	RoomId        string      `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	PlayerId      uint64      `protobuf:"varint,3,opt,name=player_id,json=playerId,proto3" json:"player_id,omitempty"` //操作者 id
	Action        *GameAction `protobuf:"bytes,4,opt,name=action,proto3" json:"action,omitempty"`
}

func (x *PlayerActionNotify) Reset() {
	*x = PlayerActionNotify{}
	mi := &file_battle_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PlayerActionNotify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionNotify) ProtoMessage() {}

func (x *PlayerActionNotify) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionNotify.ProtoReflect.Descriptor instead.
func (*PlayerActionNotify) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{10}
}

func (x *PlayerActionNotify) GetBeNotifiedUid() uint64 {
	if x != nil {
		return x.BeNotifiedUid
	}
	return 0
}

func (x *PlayerActionNotify) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *PlayerActionNotify) GetPlayerId() uint64 {
	if x != nil {
		return x.PlayerId
	}
	return 0
}

func (x *PlayerActionNotify) GetAction() *GameAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type NotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32 `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
}

func (x *NotifyResponse) Reset() {
	*x = NotifyResponse{}
	mi := &file_battle_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyResponse) ProtoMessage() {}

func (x *NotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_battle_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyResponse.ProtoReflect.Descriptor instead.
func (*NotifyResponse) Descriptor() ([]byte, []int) {
	return file_battle_proto_rawDescGZIP(), []int{11}
}

func (x *NotifyResponse) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

var File_battle_proto protoreflect.FileDescriptor

var file_battle_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x22, 0x9b, 0x01, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x72, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x72,
	0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x6c, 0x6c, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x22, 0x6f, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x77, 0x6f, 0x72, 0x64, 0x5f, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x77, 0x6f, 0x72, 0x64, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4f, 0x0a, 0x09, 0x43, 0x61, 0x72, 0x64, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43,
	0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65,
	0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x6e, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x7f, 0x0a, 0x0c, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x05, 0x63, 0x61,
	0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x62, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x2e, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x05, 0x63, 0x61, 0x72,
	0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x22, 0x69, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15,
	0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x66, 0x72, 0x6f, 0x6d, 0x58, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x72, 0x6f, 0x6d, 0x59, 0x12, 0x11, 0x0a, 0x04,
	0x74, 0x6f, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x58, 0x12,
	0x11, 0x0a, 0x04, 0x74, 0x6f, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74,
	0x6f, 0x59, 0x22, 0x4d, 0x0a, 0x0f, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x63, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x22, 0x83, 0x02, 0x0a, 0x0a, 0x47, 0x61, 0x6d, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x33, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x38, 0x0a, 0x0a, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x09, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x43, 0x61, 0x72, 0x64, 0x12, 0x3a, 0x0a, 0x09, 0x63, 0x68,
	0x61, 0x72, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x4d, 0x6f, 0x76, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x42, 0x0f, 0x0a, 0x0d, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x74,
	0x74, 0x6c, 0x65, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x09, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x2e, 0x0a, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x73,
	0x12, 0x30, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x09, 0x63, 0x61, 0x72, 0x64, 0x54, 0x61, 0x62,
	0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x75,
	0x72, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x54, 0x75, 0x72, 0x6e, 0x22, 0x84, 0x01, 0x0a, 0x0f, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0d, 0x62, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x55, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x6f, 0x6f, 0x6d, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x0a, 0x67, 0x61,
	0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x9e, 0x01, 0x0a,
	0x12, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x62, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x65, 0x64, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x72,
	0x6f, 0x6f, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x6f,
	0x6f, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x22, 0x0a,
	0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x2a, 0x6c, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x0e, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4c, 0x41, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x4b, 0x49, 0x50, 0x5f, 0x54, 0x55, 0x52, 0x4e,
	0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x55, 0x54, 0x4f, 0x5f, 0x43, 0x48, 0x41, 0x54, 0x10,
	0x03, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x44, 0x45, 0x52, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48, 0x41, 0x52, 0x5f, 0x4d, 0x4f, 0x56, 0x45, 0x10, 0x05, 0x2a,
	0x7b, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14,
	0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41,
	0x52, 0x47, 0x45, 0x54, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02,
	0x12, 0x17, 0x0a, 0x13, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x59, 0x4f,
	0x55, 0x52, 0x5f, 0x54, 0x55, 0x52, 0x4e, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x52, 0x52,
	0x4f, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x42, 0x12, 0x5a, 0x10,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x73, 0x72, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_battle_proto_rawDescOnce sync.Once
	file_battle_proto_rawDescData = file_battle_proto_rawDesc
)

func file_battle_proto_rawDescGZIP() []byte {
	file_battle_proto_rawDescOnce.Do(func() {
		file_battle_proto_rawDescData = protoimpl.X.CompressGZIP(file_battle_proto_rawDescData)
	})
	return file_battle_proto_rawDescData
}

var file_battle_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_battle_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_battle_proto_goTypes = []any{
	(ActionType)(0),             // 0: battle.ActionType
	(ActionResult)(0),           // 1: battle.ActionResult
	(*Card)(nil),                // 2: battle.Card
	(*WordCard)(nil),            // 3: battle.WordCard
	(*CardTable)(nil),           // 4: battle.CardTable
	(*BattlePlayer)(nil),        // 5: battle.BattlePlayer
	(*CharacterMoveAction)(nil), // 6: battle.CharacterMoveAction
	(*PlaceCardAction)(nil),     // 7: battle.PlaceCardAction
	(*GameAction)(nil),          // 8: battle.GameAction
	(*ActionResponse)(nil),      // 9: battle.ActionResponse
	(*GameState)(nil),           // 10: battle.GameState
	(*GameStateNotify)(nil),     // 11: battle.GameStateNotify
	(*PlayerActionNotify)(nil),  // 12: battle.PlayerActionNotify
	(*NotifyResponse)(nil),      // 13: battle.NotifyResponse
}
var file_battle_proto_depIdxs = []int32{
	3,  // 0: battle.CardTable.cards:type_name -> battle.WordCard
	3,  // 1: battle.BattlePlayer.cards:type_name -> battle.WordCard
	0,  // 2: battle.GameAction.action_type:type_name -> battle.ActionType
	7,  // 3: battle.GameAction.place_card:type_name -> battle.PlaceCardAction
	6,  // 4: battle.GameAction.char_move:type_name -> battle.CharacterMoveAction
	1,  // 5: battle.ActionResponse.result:type_name -> battle.ActionResult
	10, // 6: battle.ActionResponse.state:type_name -> battle.GameState
	5,  // 7: battle.GameState.players:type_name -> battle.BattlePlayer
	4,  // 8: battle.GameState.card_table:type_name -> battle.CardTable
	10, // 9: battle.GameStateNotify.game_state:type_name -> battle.GameState
	8,  // 10: battle.PlayerActionNotify.action:type_name -> battle.GameAction
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_battle_proto_init() }
func file_battle_proto_init() {
	if File_battle_proto != nil {
		return
	}
	file_battle_proto_msgTypes[6].OneofWrappers = []any{
		(*GameAction_PlaceCard)(nil),
		(*GameAction_CharMove)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_battle_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_battle_proto_goTypes,
		DependencyIndexes: file_battle_proto_depIdxs,
		EnumInfos:         file_battle_proto_enumTypes,
		MessageInfos:      file_battle_proto_msgTypes,
	}.Build()
	File_battle_proto = out.File
	file_battle_proto_rawDesc = nil
	file_battle_proto_goTypes = nil
	file_battle_proto_depIdxs = nil
}
