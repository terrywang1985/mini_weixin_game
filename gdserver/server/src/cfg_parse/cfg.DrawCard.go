
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

package cfg;


import "errors"

type CfgDrawCard struct {
    RarityLevel int32
    Rarity *CfgRarity
    BaseStats *CfgBaseStats
    Growth *CfgGrowth
}

const TypeId_CfgDrawCard = 221503710

func (*CfgDrawCard) GetTypeId() int32 {
    return 221503710
}

func NewCfgDrawCard(_buf map[string]interface{}) (_v *CfgDrawCard, err error) {
    _v = &CfgDrawCard{}
    { var _ok_ bool; var __json_rarity_level__ interface{}; if __json_rarity_level__, _ok_ = _buf["rarity_level"]; !_ok_ || __json_rarity_level__ == nil { err = errors.New("rarity_level error"); return } else { var __x__ int32;  { var _ok_ bool; var _x_ float64; if _x_, _ok_ = __json_rarity_level__.(float64); !_ok_ { err = errors.New("__x__ error"); return }; __x__ = int32(_x_) }; _v.RarityLevel = __x__ }}
    { var _ok_ bool; var __json_rarity__ interface{}; if __json_rarity__, _ok_ = _buf["rarity"]; !_ok_ || __json_rarity__ == nil { err = errors.New("rarity error"); return } else { var __x__ *CfgRarity;  { var _ok_ bool; var _x_ map[string]interface{}; if _x_, _ok_ = __json_rarity__.(map[string]interface{}); !_ok_ { err = errors.New("__x__ error"); return }; if __x__, err = NewCfgRarity(_x_); err != nil { return } }; _v.Rarity = __x__ }}
    { var _ok_ bool; var __json_base_stats__ interface{}; if __json_base_stats__, _ok_ = _buf["base_stats"]; !_ok_ || __json_base_stats__ == nil { err = errors.New("base_stats error"); return } else { var __x__ *CfgBaseStats;  { var _ok_ bool; var _x_ map[string]interface{}; if _x_, _ok_ = __json_base_stats__.(map[string]interface{}); !_ok_ { err = errors.New("__x__ error"); return }; if __x__, err = NewCfgBaseStats(_x_); err != nil { return } }; _v.BaseStats = __x__ }}
    { var _ok_ bool; var __json_growth__ interface{}; if __json_growth__, _ok_ = _buf["growth"]; !_ok_ || __json_growth__ == nil { err = errors.New("growth error"); return } else { var __x__ *CfgGrowth;  { var _ok_ bool; var _x_ map[string]interface{}; if _x_, _ok_ = __json_growth__.(map[string]interface{}); !_ok_ { err = errors.New("__x__ error"); return }; if __x__, err = NewCfgGrowth(_x_); err != nil { return } }; _v.Growth = __x__ }}
    return
}

